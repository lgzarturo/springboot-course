### Sentry Controller Tests
### Base URL
@baseUrl = http://localhost:8080
@apiVersion = v1

### 1. Enviar un evento de error a Sentry
#@no-cookie-jar
GET {{baseUrl}}/api/{{apiVersion}}/sentry/event
Accept: text/plain

> {%
    client.test("Solicitud ejecutada exitosamente", function () {
        client.assert(response.status === 200, "La solicitud debe devolver un estado 200");
    });

    client.test("La respuesta es texto plano", function () {
        const type = response.contentType.mimeType;
        client.assert(type === "text/plain", `Se esperaba 'text/plain' pero se recibió '${type}'`);
    });

    client.test("El cuerpo de la respuesta contiene el mensaje esperado", function () {
        const expectedMessage = "Sentry event test completed!";
        client.assert(response.body.includes(expectedMessage), `El cuerpo de la respuesta debe contener '${expectedMessage}'`);
    });
%}

### 2. Enviar un evento con Breadcrumb
#@no-cookie-jar
GET {{baseUrl}}/api/{{apiVersion}}/sentry/breadcrumbs
Accept: text/plain

> {%
    client.test("El cuerpo de la respuesta contiene el mensaje esperado", function () {
        const expectedMessage = "Breadcrumbs test completed! Check Sentry for the full context.";
        client.assert(response.body.includes(expectedMessage), `El cuerpo de la respuesta debe contener '${expectedMessage}'`);
    });
%}

### 3. Enviar un evento con Mensaje
#@no-cookie-jar
GET {{baseUrl}}/api/{{apiVersion}}/sentry/message
Accept: text/plain

> {%
    client.test("El cuerpo de la respuesta contiene el mensaje esperado", function () {
        const expectedMessage = "Message sent to Sentry: Test message";
        client.assert(response.body.includes(expectedMessage), `El cuerpo de la respuesta debe contener '${expectedMessage}'`);
    });
%}

### 4. Enviar un evento de Transacción
#@no-cookie-jar
GET {{baseUrl}}/api/{{apiVersion}}/sentry/transaction
Accept: text/plain

> {%
    client.test("El cuerpo de la respuesta contiene el mensaje esperado", function () {
        const expectedMessage = "Transaction test completed! Check Sentry Performance for details.";
        client.assert(response.body.includes(expectedMessage), `El cuerpo de la respuesta debe contener '${expectedMessage}'`);
    });
%}

### 5. Enviar un evento personalizado
#@no-cookie-jar
GET {{baseUrl}}/api/{{apiVersion}}/sentry/custom-fingerprint?type=record-info
Accept: text/plain

> {%
    client.test("El cuerpo de la respuesta contiene el mensaje esperado", function () {
        const expectedMessage = "Custom fingerprint test completed for type: record-info";
        client.assert(response.body.includes(expectedMessage), `El cuerpo de la respuesta debe contener '${expectedMessage}'`);
    });
%}

###
