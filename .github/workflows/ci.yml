name: CI - Continuous Integration

permissions:
  contents: read

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Tests and Quality Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

      - name: Run KTLint
        run: ./gradlew ktlintCheck --no-daemon

      - name: Run Detekt
        run: ./gradlew detekt --no-daemon

      - name: Generate JaCoCo report
        run: ./gradlew jacocoTestReport --no-daemon

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: build/test-results/test/

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: build/reports/jacoco/test/

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GH_PAT }}
          min-coverage-overall: 70
          min-coverage-changed-files: 80
          title: 'Coverage Report'

  lint-commits:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate commit messages
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .commitlintrc.json

  build:
    name: Build Application
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test --no-daemon

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar
